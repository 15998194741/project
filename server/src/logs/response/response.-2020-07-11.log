[2020-07-11T11:08:03.921] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"9","table":[{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"2","display":"1"},{"num":"1","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:03 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:09.945] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=2&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"2\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:09 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:12.151] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=1&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"1\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:12 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:14.163] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=2&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"2\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:14 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:16.205] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=3&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"3\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:16 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:17.266] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=4&4=%7B%22startTime%22:%222020-07-08T16:00:00.000Z%22,%22endTime%22:%222020-08-11T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"4\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-08T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-08-11T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:17 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:19.856] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=4&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"4\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:19 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:22.810] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=3&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"3\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:22 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:24.974] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"11","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"2","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:24 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:26.147] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=1&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"1\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:26 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:28.163] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=2&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"2\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:28 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:45.947] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=2&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"2\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:45 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:49.738] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:49 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:55.979] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=1&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"1\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"3","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:55 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:57.809] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=2&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"2\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:57 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:08:59.835] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=3&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"3\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"3","table":[{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"3"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:08:59 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:01.190] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:01 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:02.893] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"11","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"2","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:02 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:24.979] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"11","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"2","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:24 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:47.387] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:47 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:49.132] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=2&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"2\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:48 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:51.185] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:51 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:09:52.386] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"11","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"2","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:09:52 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:26.980] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/serverCreate","resourceDesc":"","requestType":"POST","requestParams":"{\"serverid\":\"1594437016401293910731075\",\"servername\":\"1\",\"plaform\":2,\"channel\":[\"小米\",\"久游\"],\"ip\":\"1\",\"display\":2,\"srttime\":\"2020-06-30T16:00:00.000Z\",\"address\":\"11\",\"test\":\"0\",\"gamename\":\"空翼冒险团\",\"gameid\":1}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"创建成功","data":{"status":1,"createTime":"2020-07-11T03:10:28.678Z","updateTime":"2020-07-11T03:10:28.678Z","id":98,"serverid":"1594437016401293910731075","servername":"1","plaform":"2","channel":["小米","久游"],"ip":"1","display":"2","srttime":"2020-06-30T16:00:00.000Z","address":"11","test":"0","gamename":"空翼冒险团","gameid":1,"createUserId":1,"updateUserId":null,"pid":null,"load":null}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:26 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:36.939] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=2&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"2\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"1","table":[{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"1","display":"2"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:36 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:38.878] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:38 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:39.880] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"12","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:39 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:42.911] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=2&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"2\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"1","table":[{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"1","display":"2"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:42 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:45.564] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:45 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:48.532] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"12","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:48 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:10:53.095] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:10:52 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:11:18.497] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/selectComponent?code=areaclothing&gameid=1","resourceDesc":"根据游戏ID 组件名称搜索 区服组件","requestType":"GET","requestParams":"{\"code\":\"areaclothing\",\"gameid\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找成功","data":{"values":["久游","小米","腾讯"]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:11:18 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:11:18.519] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"12","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:11:18 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:17.667] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/selectComponent?code=areaclothing&gameid=1","resourceDesc":"根据游戏ID 组件名称搜索 区服组件","requestType":"GET","requestParams":"{\"code\":\"areaclothing\",\"gameid\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找成功","data":{"values":["久游","小米","腾讯"]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:17 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:17.686] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"12","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:17 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:27.352] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=1&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"1\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"7","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:27 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:31.331] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=2&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"2\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"1","table":[{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"1","display":"2"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:31 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:33.375] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"12","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":88,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:25.074Z","update_time":"2020-07-10T09:31:25.074Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"2","srttime":"2020-07-22T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":95,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:22.629Z","update_time":"2020-07-10T10:46:22.629Z","servername":"111","ip":"11","address":"111","plaform":"1","display":"3","srttime":"2020-07-14T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779676996815892341","test":"0","load":null,"gameid":1},{"id":96,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:46:41.166Z","update_time":"2020-07-10T10:46:41.166Z","servername":"123","ip":"11","address":"123","plaform":"0","display":"2","srttime":"2020-07-06T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594377991147109192251045","test":"0","load":null,"gameid":1},{"id":97,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:47:05.122Z","update_time":"2020-07-10T10:47:05.122Z","servername":"123","ip":"123","address":"123","plaform":"0","display":"4","srttime":"2020-07-23T16:00:00.000Z","channel":["小米"],"gamename":"空翼冒险团","pid":null,"serverid":"15943780159239212669443","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"3","display":"2"},{"num":"4","display":"3"},{"num":"2","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:33 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:36.731] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"8","table":[{"id":87,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T08:32:29.518Z","update_time":"2020-07-10T08:32:29.518Z","servername":"111","ip":"1","address":"111","plaform":"1","display":"1","srttime":"2020-07-07T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594369838591","test":"0","load":null,"gameid":1},{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":91,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:57.755Z","update_time":"2020-07-10T09:31:57.755Z","servername":"123123","ip":"11","address":"1231231","plaform":"1","display":"4","srttime":"2020-07-16T16:00:00.000Z","channel":["小米","久游","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":93,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:34:17.459Z","update_time":"2020-07-10T09:34:17.459Z","servername":"12","ip":"123","address":"123","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["久游","小米"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373639131","test":"0","load":null,"gameid":1},{"id":94,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T10:45:55.048Z","update_time":"2020-07-10T10:45:55.048Z","servername":"1","ip":"11","address":"111","plaform":"1","display":"1","srttime":"2020-07-14T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"15943779439078733681366","test":"0","load":null,"gameid":1},{"id":98,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-11T03:10:28.678Z","update_time":"2020-07-11T03:10:28.678Z","servername":"1","ip":"1","address":"11","plaform":"2","display":"2","srttime":"2020-06-30T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594437016401293910731075","test":"0","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"1"},{"num":"1","display":"2"},{"num":"3","display":"3"},{"num":"1","display":"4"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:36 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:37.796] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=3&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"3\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"3","table":[{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"3"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:37 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:38.639] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=3&3=3&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"3\",\"3\":\"3\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:38 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:40.174] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=3&3=&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"3\",\"3\":\"\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"3","table":[{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":90,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:47.545Z","update_time":"2020-07-10T09:31:47.545Z","servername":"123123","ip":"123","address":"123123","plaform":"1","display":"3","srttime":"2020-07-29T16:00:00.000Z","channel":["久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1}],"displayNum":[{"num":"3","display":"3"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:40 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:12:45.898] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=3&3=&4=%7B%22startTime%22:%222020-07-15T16:00:00.000Z%22,%22endTime%22:%222020-07-23T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"3\",\"3\":\"\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-15T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-07-23T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"2","table":[{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1}],"displayNum":[{"num":"2","display":"3"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:12:45 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:13:08.026] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=&2=3&3=&4=%7B%22startTime%22:%222020-07-15T16:00:00.000Z%22,%22endTime%22:%222020-07-23T16:00:00.000Z%22%7D&5=serverid&6=1&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"\",\"2\":\"3\",\"3\":\"\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-15T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-07-23T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"1\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:13:08 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:13:09.147] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E4%B9%85%E6%B8%B8&2=3&3=&4=%7B%22startTime%22:%222020-07-15T16:00:00.000Z%22,%22endTime%22:%222020-07-23T16:00:00.000Z%22%7D&5=serverid&6=1&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"久游\",\"2\":\"3\",\"3\":\"\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-15T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-07-23T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"1\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"0","table":[],"displayNum":[]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:13:09 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T11:13:17.046] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/server/findServer?0=0&1=%E5%B0%8F%E7%B1%B3&2=3&3=&4=%7B%22startTime%22:%222020-07-15T16:00:00.000Z%22,%22endTime%22:%222020-07-23T16:00:00.000Z%22%7D&5=serverid&6=&7=1","resourceDesc":"","requestType":"GET","requestParams":"{\"0\":\"0\",\"1\":\"小米\",\"2\":\"3\",\"3\":\"\",\"4\":\"{\\\"startTime\\\":\\\"2020-07-15T16:00:00.000Z\\\",\\\"endTime\\\":\\\"2020-07-23T16:00:00.000Z\\\"}\",\"5\":\"serverid\",\"6\":\"\",\"7\":\"1\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找","data":{"total":"2","table":[{"id":89,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:31:36.649Z","update_time":"2020-07-10T09:31:36.649Z","servername":"123","ip":"123","address":"123","plaform":"1","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["小米","久游"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1},{"id":92,"status":1,"create_user_id":1,"update_user_id":null,"create_time":"2020-07-10T09:32:09.572Z","update_time":"2020-07-10T09:32:09.572Z","servername":"123","ip":"231231","address":"1231231","plaform":"0","display":"3","srttime":"2020-07-22T16:00:00.000Z","channel":["久游","小米","腾讯"],"gamename":"空翼冒险团","pid":null,"serverid":"1594373467036","test":"1","load":null,"gameid":1}],"displayNum":[{"num":"2","display":"3"}]}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 11:13:17 ├F10: AM┤","executionTime":0}
*************** log end ***************

[2020-07-11T12:23:33.498] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/user/token","resourceDesc":"根据id查找数据","requestType":"GET","requestParams":"{}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找成功","data":{"username":"admin","avatar":"http://wework.qpic.cn/bizmail/tBzSXZ7noicaWNIO15XKp1pU9m0ibZvPFbTHrjahY6Sp5iaEJdgq6h6ww/100","nickname":"管理员"}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 12:23:32 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T12:23:33.535] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/user/permission?game=%E7%A9%BA%E7%BF%BC%E5%86%92%E9%99%A9%E5%9B%A2&username=admin","resourceDesc":"根据id查找数据","requestType":"GET","requestParams":"{\"game\":\"空翼冒险团\",\"username\":\"admin\"}","responseCode":200,"responseMessage":"","responseDate":{"code":200,"message":"查找成功","data":{"routes":[{"name":"区服管理","urlid":1,"children":[{"meta":1,"name":"区服设置","url":"/zoneManagement/zoneSettings","urlid":2,"pid":1}]},{"name":"角色管理","urlid":3,"children":[{"meta":1,"name":"角色查询","url":"/roleManagement/roleQuery","urlid":4,"pid":3},{"meta":1,"name":"聊天查询","url":"/roleManagement/chatQuery","urlid":5,"pid":3},{"meta":1,"name":"背包查询","url":"/roleManagement/rucksackQuery","urlid":6,"pid":3},{"meta":1,"name":"产消查询","url":"/roleManagement/prosumingQuery","urlid":7,"pid":3}]},{"name":"充值管理","urlid":8,"children":[{"meta":1,"name":"充值明细","url":"/rechargeManagement/rechargeDetails","urlid":9,"pid":8}]},{"name":"公告管理","urlid":10,"children":[{"meta":1,"name":"公告管理","url":"/announcedManagement/index","urlid":11,"pid":10}]},{"name":"邮件管理","urlid":12,"children":[{"meta":1,"name":"邮件管理","url":"/mailManagement/index","urlid":13,"pid":12}]},{"name":"活动管理","urlid":14,"children":[{"meta":1,"name":"活动管理","url":"/activityManagement/index","urlid":15,"pid":14}]},{"name":"CDK管理","urlid":16,"children":[{"meta":1,"name":"CDK管理","url":"/CDKManagement/index","urlid":17,"pid":16}]},{"name":"白名单管理","urlid":18,"children":[{"meta":1,"name":"白名单管理","url":"/whiteListManagement/index","urlid":19,"pid":18},{"meta":1,"name":"白名单邮件","url":"/whiteListManagement/whiteListMail","urlid":20,"pid":18}]},{"name":"GM管理","urlid":21,"children":[{"meta":1,"name":"GM管理","url":"/GMManagement","urlid":22,"pid":21}]}],"games":["空翼冒险团","刺客契约","无线英雄"],"gamename":"空翼冒险团","gameid":1}},"serverIp":"当前服务器id","userIp":"127.0.0.1","userId":null,"createTime":"2020-7-11 12:23:33 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:38.152] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/api/auth/user/primission","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:38 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:38.279] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:38 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:40.999] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:41.032] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:44.438] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graph","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:44.471] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:48.694] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:48.722] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:50.989] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:50 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:33:51.018] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":590,"responseMessage":"","responseDate":{"code":590,"message":"权限异常"},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:33:51 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:33.485] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 1:34:33 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:34.468] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 1:34:34 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:34.505] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:34 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:37.785] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:37 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:37.920] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:37 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:38.065] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:38 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:47.946] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected <EOF>.","locations":[{"line":33,"column":1}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:47 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:55.276] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:55.898] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:56.282] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:56.954] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:58.142] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:58.293] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:58.486] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:59.055] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:34:59.632] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:34:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:35:01.554] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:35:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:19.612] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:19 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:19.631] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:19 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:20.193] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:20.398] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:20.664] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:20.816] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:23.861] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  ojbk\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Cannot query field \"ojbk\" on type \"Query\".","locations":[{"line":35,"column":3}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:23 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:40.552] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:41.760] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:41.944] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:42.371] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:44.229] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:44.968] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:37:45.127] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:37:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:43:16.128] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:43:16 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:43:21.907] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:43:21 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:43:23.022] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:43:23 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:31.942] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:31 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:38.875] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:38 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:39.016] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:39 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:40.686] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:40.831] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:40.971] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:41.124] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:41.651] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:41.850] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:42.519] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:43.142] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:43.281] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:44.028] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:45.780] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  __schema\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Field \"__schema\" of type \"__Schema!\" must have a selection of subfields. Did you mean \"__schema { ... }\"?","locations":[{"line":35,"column":3}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:47.678] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:47 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:48.424] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:48.767] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:49.127] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:49 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:51:50.915] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:51:50 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:46.673] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null,"super":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:46 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:49.507] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null,"super":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:49 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:52.020] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:52.357] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:52.821] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:53.314] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:52:54.467] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:52:54 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:12.571] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:12 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:14.539] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:17.977] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:18.580] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:18 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:19.996] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:19 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:20.317] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:20.755] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:20.939] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:22.588] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:42.172] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 1:53:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:42.244] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super(1)\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Expected Name, found Int \"1\".","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 1:53:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:42.247] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:44.947] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super(1)\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Expected Name, found Int \"1\".","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:47.515] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:47 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:48.420] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:49.984] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:49 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:53:51.467] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super('1')\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected single quote character ('), did you mean to use a double quote (\")?","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:53:51 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:07.046] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super('1')\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected single quote character ('), did you mean to use a double quote (\")?","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:07 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:07.546] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super('1')\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected single quote character ('), did you mean to use a double quote (\")?","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:07 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:07.714] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super('1')\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected single quote character ('), did you mean to use a double quote (\")?","locations":[{"line":35,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:07 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:09.178] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:09.331] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:09.487] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:09.667] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:09.987] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:11.198] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk[object Object]"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:11 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:33.145] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:33 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:56:59.239] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:56:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:48.079] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?query=%23%20Welcome%20to%20GraphiQL%0A%23%0A%23%20GraphiQL%20is%20an%20in-browser%20tool%20for%20writing%2C%20validating%2C%20and%0A%23%20testing%20GraphQL%20queries.%0A%23%0A%23%20Type%20queries%20into%20this%20side%20of%20the%20screen%2C%20and%20you%20will%20see%20intelligent%0A%23%20typeaheads%20aware%20of%20the%20current%20GraphQL%20type%20schema%20and%20live%20syntax%20and%0A%23%20validation%20errors%20highlighted%20within%20the%20text.%0A%23%0A%23%20GraphQL%20queries%20typically%20start%20with%20a%20%22%7B%22%20character.%20Lines%20that%20starts%0A%23%20with%20a%20%23%20are%20ignored.%0A%23%0A%23%20An%20example%20GraphQL%20query%20might%20look%20like%3A%0A%23%0A%23%20%20%20%20%20%7B%0A%23%20%20%20%20%20%20%20field(arg%3A%20%22value%22)%20%7B%0A%23%20%20%20%20%20%20%20%20%20subField%0A%23%20%20%20%20%20%20%20%7D%0A%23%20%20%20%20%20%7D%0A%23%0A%23%20Keyboard%20shortcuts%3A%0A%23%0A%23%20%20Prettify%20Query%3A%20%20Shift-Ctrl-P%20(or%20press%20the%20prettify%20button%20above)%0A%23%0A%23%20%20%20%20%20%20%20Run%20Query%3A%20%20Ctrl-Enter%20(or%20press%20the%20play%20button%20above)%0A%23%0A%23%20%20%20Auto%20Complete%3A%20%20Ctrl-Space%20(or%20just%20start%20typing)%0A%23%0A%0A%0A%0A%0A%7B%0A%20%20hello%2C%0A%20%20super%0A%7D","resourceDesc":"","requestType":"GET","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\"}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: \"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\n        response: \"{\\n  \\\"data\\\": {\\n    \\\"hello\\\": \\\"helloworld\\\",\\n    \\\"super\\\": \\\"ojbk\\\"\\n  }\\n}\",\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:48.313] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:48.402] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:52.204] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\\n\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:55.154] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:55.876] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:56.908] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T13:59:59.749] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 1:59:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T14:00:00.688] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 2:00:00 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T14:00:01.106] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/favicon.ico","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 2:00:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:42.671] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:42.730] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:42 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:47.622] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:47 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:48.010] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:47 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:48.014] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:51.121] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:51 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:51.596] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:51 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:52.504] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:52.639] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:52.866] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:53.008] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:53.160] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:54.682] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hellp\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Cannot query field \"hellp\" on type \"Query\". Did you mean \"hello\"?","locations":[{"line":31,"column":3}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:54 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:57.499] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:57.805] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:57:59.535] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:57:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:02.639] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:02 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:04.503] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:04 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:04.965] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:04 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:05.214] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:05 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:05.625] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:05 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:05.938] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:05 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:07.239] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:07 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:24.671] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost?query=%23%20Welcome%20to%20GraphiQL%0A%23%0A%23%20GraphiQL%20is%20an%20in-browser%20tool%20for%20writing%2C%20validating%2C%20and%0A%23%20testing%20GraphQL%20queries.%0A%23%0A%23%20Type%20queries%20into%20this%20side%20of%20the%20screen%2C%20and%20you%20will%20see%20intelligent%0A%23%20typeaheads%20aware%20of%20the%20current%20GraphQL%20type%20schema%20and%20live%20syntax%20and%0A%23%20validation%20errors%20highlighted%20within%20the%20text.%0A%23%0A%23%20GraphQL%20queries%20typically%20start%20with%20a%20%22%7B%22%20character.%20Lines%20that%20starts%0A%23%20with%20a%20%23%20are%20ignored.%0A%23%0A%23%20An%20example%20GraphQL%20query%20might%20look%20like%3A%0A%23%0A%23%20%20%20%20%20%7B%0A%23%20%20%20%20%20%20%20field(arg%3A%20%22value%22)%20%7B%0A%23%20%20%20%20%20%20%20%20%20subField%0A%23%20%20%20%20%20%20%20%7D%0A%23%20%20%20%20%20%7D%0A%23%0A%23%20Keyboard%20shortcuts%3A%0A%23%0A%23%20%20Prettify%20Query%3A%20%20Shift-Ctrl-P%20(or%20press%20the%20prettify%20button%20above)%0A%23%0A%23%20%20%20%20%20%20%20Run%20Query%3A%20%20Ctrl-Enter%20(or%20press%20the%20play%20button%20above)%0A%23%0A%23%20%20%20Auto%20Complete%3A%20%20Ctrl-Space%20(or%20just%20start%20typing)%0A%23%0A%0A%7B%0A%20%20hello%2C%0A%20%20super%0A%7D","resourceDesc":"","requestType":"GET","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\"}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: \"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\n        response: \"{\\n  \\\"data\\\": {\\n    \\\"hello\\\": \\\"helloworld\\\",\\n    \\\"super\\\": \\\"ojbk\\\"\\n  }\\n}\",\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 5:58:24 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:24.886] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 5:58:24 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:24.892] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:24 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:28.425] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:28 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:28.560] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 5:58:28 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:28.564] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 5:58:28 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T17:58:30.552] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 5:58:30 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:08.119] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:08.429] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:08.529] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:10.990] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:11.090] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:11 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:14.934] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:15.047] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:15.124] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:03:17.344] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:03:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:04:41.630] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:04:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:04:57.940] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:04:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:01.487] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:05:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:01.615] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:05:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:01.677] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:02.846] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:02 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:03.661] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:03 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:14.641] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:15.822] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:20.190] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:22.849] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:22.979] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:22.990] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:05:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:05:35.591] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:05:35 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:10:35.526] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:10:35 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:10:37.627] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:10:37 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:26:51.935] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:26:51 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:26:52.767] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:26:52 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:26:57.455] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:26:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:26:58.079] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:26:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:26:58.431] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:26:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:02.040] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:02 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:03.318] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:03 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:03.440] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:03 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:03.485] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:03 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:04.431] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:04 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:08.710] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:08.829] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:08.867] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:10.055] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:38.646] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:38 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:40.095] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:40.216] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/apione?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:40.222] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:43.519] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:43.641] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:43.699] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:44.879] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:27:48.759] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:27:48 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:23.930] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:23 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:25.615] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:25 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:25.658] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:25 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:35.387] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:28:35 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:35.422] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:28:35 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:41.496] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:28:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:41.519] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:41 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:43.214] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:43.326] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:43.361] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:28:44.505] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:28:44 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:20.520] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:20.669] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:20.701] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:22.487] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/apipost/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:43.806] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:43.865] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:43 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:45.572] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:45.727] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:45.772] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:46.951] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:29:46 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:55.972] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:56.127] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:56.134] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:56.712] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:56.826] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:56.839] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:56 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:29:57.863] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:29:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:33:26.145] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:33:26 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:33:26.901] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:33:26 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:33:58.687] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:33:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:34:17.289] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:34:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:34:18.749] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:34:18 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:34:45.587] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:34:45 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:34:46.421] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:34:46 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:37:06.558] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:37:06 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:37:15.165] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Expected { schemaone: { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: undefined, _subscriptionType: undefined, _directives: [Array], _typeMap: [Object], _subTypeMap: {}, _implementationsMap: {} } } to be a GraphQL schema."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:37:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:33.280] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/graphql","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:44:33 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:33.349] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:44:33 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:40.393] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/graphql","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:44:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:40.459] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:44:40 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:53.016] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":{"errors":[{"message":"Must provide query string."}]},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:44:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:44:53.079] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:44:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:45:09.090] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api","resourceDesc":"","requestType":"GET","requestParams":"{}","responseMessage":"","responseDate":"<!--\nThe request to this GraphQL server provided the header \"Accept: text/html\"\nand as a result has been presented GraphiQL - an in-browser IDE for\nexploring GraphQL.\nIf you wish to receive JSON, provide the header \"Accept: application/json\" or\nadd \"&raw\" to the end of the URL within a browser.\n-->\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>GraphiQL</title>\n  <meta name=\"robots\" content=\"noindex\" />\n  <meta name=\"referrer\" content=\"origin\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body {\n      margin: 0;\n      overflow: hidden;\n    }\n    #graphiql {\n      height: 100vh;\n    }\n  </style>\n  <link href=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.css\" rel=\"stylesheet\" />\n  <script src=\"//cdn.jsdelivr.net/es6-promise/4.0.5/es6-promise.auto.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/fetch/0.9.0/fetch.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/react/15.4.2/react-dom.min.js\"></script>\n  <script src=\"//cdn.jsdelivr.net/npm/graphiql@0.12.0/graphiql.min.js\"></script>\n</head>\n<body>\n  <div id=\"graphiql\">Loading...</div>\n  <script>\n    // Collect the URL parameters\n    var parameters = {};\n    window.location.search.substr(1).split('&').forEach(function (entry) {\n      var eq = entry.indexOf('=');\n      if (eq >= 0) {\n        parameters[decodeURIComponent(entry.slice(0, eq))] =\n          decodeURIComponent(entry.slice(eq + 1));\n      }\n    });\n    // Produce a Location query string from a parameter object.\n    function locationQuery(params) {\n      return '?' + Object.keys(params).filter(function (key) {\n        return Boolean(params[key]);\n      }).map(function (key) {\n        return encodeURIComponent(key) + '=' +\n          encodeURIComponent(params[key]);\n      }).join('&');\n    }\n    // Derive a fetch URL from the current URL, sans the GraphQL parameters.\n    var graphqlParamNames = {\n      query: true,\n      variables: true,\n      operationName: true\n    };\n    var otherParams = {};\n    for (var k in parameters) {\n      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {\n        otherParams[k] = parameters[k];\n      }\n    }\n    var fetchURL = locationQuery(otherParams);\n    // Defines a GraphQL fetcher using the fetch API.\n    function graphQLFetcher(graphQLParams) {\n      return fetch(fetchURL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQLParams),\n        credentials: 'include',\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n\n    // When the query and variables string is edited, update the URL bar so\n    // that it can be easily shared.\n    function onEditQuery(newQuery) {\n      parameters.query = newQuery;\n      updateURL();\n    }\n\n    function onEditVariables(newVariables) {\n      parameters.variables = newVariables;\n      updateURL();\n    }\n\n    function onEditOperationName(newOperationName) {\n      parameters.operationName = newOperationName;\n      updateURL();\n    }\n\n    function updateURL() {\n      history.replaceState(null, null, locationQuery(parameters));\n    }\n\n    // Render <GraphiQL /> into the body.\n    ReactDOM.render(\n      React.createElement(GraphiQL, {\n        fetcher: graphQLFetcher,\n        onEditQuery: onEditQuery,\n        onEditVariables: onEditVariables,\n        onEditOperationName: onEditOperationName,\n        query: undefined,\n        response: undefined,\n        variables: undefined,\n        operationName: undefined,\n      }),\n      document.getElementById('graphiql')\n    );\n  </script>\n</body>\n</html>","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:45:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:45:09.391] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          description\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      description\\n      fields(includeDeprecated: true) {\\n        name\\n        description\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        description\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      description\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"}","responseMessage":"","responseDate":{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"hello","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"super","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"The `Boolean` scalar type represents `true` or `false`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Location adjacent to a variable definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:45:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:45:09.425] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:45:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:45:11.355] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:45:11 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:10.680] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:11.514] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234","super":"342"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:11 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:13.726] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:13 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:14.066] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:14.358] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:14.626] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:47:16.081] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"2234"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:47:16 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:12.551] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:12 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:13.232] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:13 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:13.392] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:13 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:13.560] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:13 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:15.814] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:15.949] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:15 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:16.946] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:16 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:17.217] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:20.935] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:21.064] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:21 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:21.687] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:21 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:48:22.745] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null,"super":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:48:22 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:11.395] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:11 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:12.008] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:12 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:12.185] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:12 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:16.615] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:16 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:17.224] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:50:54.809] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:50:54 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:14.464] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:53.451] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:53.639] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:53.832] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:53 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:54.432] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:54 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:51:55.568] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":null}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:51:55 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:19.814] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::ffff:127.0.0.1","userId":null,"createTime":"2020-7-11 6:57:19 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:54.422] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello,\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"data":{"hello":"helloworld[object Object]4546[object Object]","super":"ojbk"}},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:57:54 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:57.741] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:57:57 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:58.642] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:57:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:58.769] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:57:58 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:57:59.500] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:57:59 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:00.503] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:00 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:00.836] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:00 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:01.017] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:01 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:02.303] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello(1,2),\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Expected Name, found Int \"1\".","locations":[{"line":31,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:02 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:06.788] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:06 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:08.015] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:08.243] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:08.463] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:08 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:09.461] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:09.601] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:09 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:10.246] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:10.408] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:10.569] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:10 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:12.142] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello('11','22'),\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Unexpected single quote character ('), did you mean to use a double quote (\")?","locations":[{"line":31,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:12 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:14.976] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:14 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:16.084] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:16 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:17.497] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:17 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:18.343] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"","resourceDesc":"","requestType":"GET","requestParams":"{}","responseCode":"","responseMessage":"","responseDate":"请求异常，请求接口不存在 或 响应返回！！！","serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:18 ├F10: PM┤","executionTime":0}
*************** log end ***************

[2020-07-11T18:58:20.965] [INFO] resLogger - 
*************** log start ***************
日志记录：{"resourceUrl":"/graphql/api?","resourceDesc":"","requestType":"POST","requestParams":"{\"query\":\"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that starts\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n{\\n  hello(`11`,`22`),\\n  super\\n  \\n}\",\"variables\":null}","responseMessage":"","responseDate":{"errors":[{"message":"Syntax Error: Cannot parse the unexpected character \"`\".","locations":[{"line":31,"column":9}]}]},"serverIp":"当前服务器id","userIp":"::1","userId":null,"createTime":"2020-7-11 6:58:20 ├F10: PM┤","executionTime":0}
*************** log end ***************

